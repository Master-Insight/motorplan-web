---
const { opcionesMedios } = Astro.props;
---

<div id="seccionD" class="seccion hidden">
  <div class="mb-12">
    <h3 class="text-2xl font-bold text-gray-800 mb-4 text-center">
      D) Informa tu pago
    </h3>
    <p class="text-lg text-gray-700 mb-4 text-center">
      Complete el siguiente formulario con su DNI, monto, fecha, seleccione el
      medio de pago utilizado y adjunte el comprobante.
    </p>
    <form
      class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 max-w-md mx-auto"
      id="formDPayForm"
      onsubmit="handleSubmitD(event)"
      enctype="multipart/form-data"
    >
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="nombreD"
          >Nombre y Apellido</label
        >
        <input
          id="nombreD"
          name="nombreD"
          type="text"
          placeholder="Ingrese su nombre y apellido"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="dniD"
          >DNI</label
        >
        <input
          id="dniD"
          name="dniD"
          type="text"
          placeholder="Ingrese su DNI"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="montoD"
          >Monto</label
        >
        <input
          id="montoD"
          name="montoD"
          type="number"
          placeholder="Ingrese el monto"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="fechaD"
          >Fecha</label
        >
        <input
          id="fechaD"
          name="fechaD"
          type="date"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        />
      </div>
      <div class="mb-4">
        <label class="block text-gray-700 text-sm font-bold mb-2" for="medioD"
          >Medio de Pago Utilizado</label
        >
        <select
          id="medioD"
          name="medioD"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        >
          <option value="">Seleccione una opción</option>
          {
            opcionesMedios.map((opcion) => (
              <option value={opcion}>{opcion}</option>
            ))
          }
        </select>
      </div>
      <div class="mb-4">
        <label
          class="block text-gray-700 text-sm font-bold mb-2"
          for="comprobante">Comprobante</label
        >
        <input
          id="comprobante"
          name="comprobante"
          type="file"
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700"
        />
      </div>
      <div class="text-center">
        <button
          type="submit"
          class="bg-primary hover:bg-primary-dark text-white font-bold py-2 px-4 rounded"
        >
          Enviar Información
        </button>
      </div>
    </form>
  </div>
</div>

<script is:inline>
  const validateRequiredFields = (fields) => {
    for (const field of fields) {
      if (!field.value.trim()) {
        alert(`El campo ${field.name} es obligatorio.`);
        return false;
      }
    }
    return true;
  };

  const validateDNI = (dni) => {
    const dniRegex = /^\d{7,8}$/;
    if (!dniRegex.test(dni)) {
      alert("El DNI debe tener entre 7 y 8 dígitos.");
      return false;
    }
    return true;
  };

  const validateDate = (date) => {
    const fechaActual = new Date();
    const fechaIngresada = new Date(date);
    const seisMesesAtras = new Date();
    seisMesesAtras.setMonth(fechaActual.getMonth() - 6);

    if (fechaIngresada > fechaActual) {
      alert("La fecha no puede ser mayor a la fecha actual.");
      return false;
    }

    if (fechaIngresada < seisMesesAtras) {
      alert("La fecha no puede ser menor a 6 meses antes de la fecha actual.");
      return false;
    }

    return true;
  };

  const validateFile = (file, tiposPermitidos, tamanoMaximo) => {
    if (!tiposPermitidos.includes(file.type)) {
      alert("Solo se permiten archivos PDF o imágenes (JPEG, PNG).");
      return false;
    }

    if (file.size > tamanoMaximo) {
      alert("El archivo no puede superar los 25 MB.");
      return false;
    }

    return true;
  };

  const validateMonto = (monto) => {
    if (monto <= 49) {
      alert("El monto debe ser válido.");
      return false;
    }
    return true;
  };

  async function handleSubmitD(event) {
    event.preventDefault(); // Evita el comportamiento por defecto del formulario

    const form = document.getElementById("formDPayForm");
    const modal = document.getElementById("modal");

    // Mostrar el modal de "Enviando..."
    modal.classList.remove("hidden");

    // Validaciones
    const fields = [
      { name: "Nombre y Apellido", value: form.nombreD.value },
      { name: "DNI", value: form.dniD.value },
      { name: "Monto", value: form.montoD.value },
      { name: "Fecha", value: form.fechaD.value },
      { name: "Medio de Pago", value: form.medioD.value },
      { name: "Comprobante", value: form.comprobante.files[0] },
    ];

    if (!validateRequiredFields(fields)) {
      modal.classList.add("hidden");
      return;
    }

    if (!validateDNI(form.dniD.value)) {
      modal.classList.add("hidden");
      return;
    }

    if (!validateDate(form.fechaD.value)) {
      modal.classList.add("hidden");
      return;
    }

    if (!validateMonto(parseFloat(form.montoD.value))) {
      modal.classList.add("hidden");
      return;
    }

    const tiposPermitidos = [
      "application/pdf",
      "image/jpeg",
      "image/jpg",
      "image/png",
      "image/bmp",
    ];
    const tamanoMaximo = 25 * 1024 * 1024; // 25 MB

    if (
      !validateFile(form.comprobante.files[0], tiposPermitidos, tamanoMaximo)
    ) {
      modal.classList.add("hidden");
      return;
    }

    const formData = new FormData(form); // se envia como formData y no como JSON

    try {
      const response = await fetch("/api/payD.json", {
        method: "POST",
        body: formData,
      });

      if (response.ok) {
        // Redirigir a la página de "gracias por tu contacto"
        window.location.href = "/graciasportucontacto";
      } else {
        alert("Error al enviar los datos");
      }
    } catch (error) {
      alert("Ocurrió un error inesperado: " + error.message);
    } finally {
      // Ocultar el modal de "Enviando..."
      modal.classList.add("hidden");
    }
  }
</script>
